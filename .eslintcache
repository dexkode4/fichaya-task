[{"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/App.tsx":"1","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/Request/index.tsx":"2","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/AppRouter/index.tsx":"3","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/PageLayout/index.tsx":"4","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/Header/index.tsx":"5","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/assets/svg/index.ts":"6","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/ComingSoon/index.tsx":"7","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/CustomButton/index.tsx":"8","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/index.tsx":"9","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/Request/Request.component.tsx":"10","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/interface.ts":"11","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/GenerateInvoice/index.tsx":"12","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Context/invoiceContext.tsx":"13","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/Invoice/index.tsx":"14"},{"size":150,"mtime":1611343562344,"results":"15","hashOfConfig":"16"},{"size":3183,"mtime":1611499198960,"results":"17","hashOfConfig":"16"},{"size":1089,"mtime":1611502093275,"results":"18","hashOfConfig":"16"},{"size":405,"mtime":1611403904561,"results":"19","hashOfConfig":"16"},{"size":1879,"mtime":1611402978043,"results":"20","hashOfConfig":"16"},{"size":416,"mtime":1611475718797,"results":"21","hashOfConfig":"16"},{"size":291,"mtime":1611482240527,"results":"22","hashOfConfig":"16"},{"size":1284,"mtime":1611499552197,"results":"23","hashOfConfig":"16"},{"size":349,"mtime":1611434111659,"results":"24","hashOfConfig":"16"},{"size":1274,"mtime":1611434699778,"results":"25","hashOfConfig":"16"},{"size":439,"mtime":1611417013486,"results":"26","hashOfConfig":"16"},{"size":6125,"mtime":1611501728234,"results":"27","hashOfConfig":"16"},{"size":2058,"mtime":1611501401353,"results":"28","hashOfConfig":"16"},{"size":518,"mtime":1611502202033,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3almqv",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/App.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/Request/index.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/AppRouter/index.tsx",[],["64","65"],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/PageLayout/index.tsx",["66"],"import React, { ReactNode } from 'react'\nimport { IPageLayout } from '../../interface';\nimport Header from '../Header';\nimport styles from './PageLayout.module.scss';\n\nfunction PageLayout({ children }: IPageLayout) {\n    return (\n        <div>\n            <Header />\n            <div className={styles.body}>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default PageLayout\n","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/Header/index.tsx",[],["67","68"],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/assets/svg/index.ts",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/ComingSoon/index.tsx",[],["69","70"],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Components/CustomButton/index.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/index.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/Request/Request.component.tsx",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/interface.ts",[],"/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/GenerateInvoice/index.tsx",["71"],"import React, { useContext } from 'react';\nimport { Prompt } from \"react-router-dom\";\nimport CustomButton from '../../Components/CustomButton';\nimport PageLayout from '../../Components/PageLayout';\nimport styles from './GenerateInvoice.module.scss';\nimport DatePicker from \"react-datepicker\";\nimport { InvoiceContext } from '../../Context/invoiceContext';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './custom-react-date-picker.scss';\nimport { FiChevronDown } from 'react-icons/fi'\nimport { IGenerateInvoice } from '../../interface';\n\n\nfunction GenerateInvoice({ history, match }: IGenerateInvoice) {\n    const state = useContext(InvoiceContext);\n    return (\n        <PageLayout>\n            <CustomButton text=\"Generate invoice\" clear={false} fill={false} />\n            <header className={styles.header}>\n                ENTER INVOICE INFO\n            </header>\n            <div className={styles.formSection}>\n                <div className={styles.formSectionLeft}>\n                    <div className={styles.formInput}>\n                        <label htmlFor=\"company\">Customer/ Company name</label>\n                        <input type=\"text\" name=\"company\" id=\"company\" className={styles.inputField} onChange={state?.handleFormData} />\n                    </div>\n                    <div className={styles.mid}>\n                        <div className={styles.formInput}>\n                            <label htmlFor=\"email\">Email address</label>\n                            <input type=\"email\" name=\"email\" id=\"email\" className={styles.inputField} onChange={state?.handleFormData} />\n                        </div>\n                        <div className={styles.formInput}>\n                            <label htmlFor=\"phone\">Phone number</label>\n                            <input type=\"number\" name=\"phone\" id=\"phone\" className={styles.inputField} onChange={state?.handleFormData} />\n                        </div>\n                    </div>\n                    <div className={styles.formInput}>\n                        <label htmlFor=\"address\">Home/ Building Address</label>\n                        <input type=\"text\" name=\"address\" id=\"address\" className={styles.inputField} onChange={state?.handleFormData} />\n                    </div>\n\n                </div>\n                <div className={styles.formSectionRight}>\n                    <div className={styles.mid}>\n                        <div>\n                            <label>Issue date</label>\n                            <div className={styles.dateInput}>\n                                <DatePicker\n                                    selected={state?.formData.issueDate}\n                                    onChange={(date: Date) => state?.handleIssueDate(date)}\n                                    name=\"startDate\"\n                                    dateFormat=\"MM/dd/yyyy\"\n                                    wrapperClassName=\"datePicker\"\n                                    calendarClassName=\"calender\"\n                                />\n                                <FiChevronDown />\n                            </div>\n                        </div>\n                        <div>\n                            <label>Due date</label>\n                            <div className={styles.dateInput}>\n                                <DatePicker\n                                    selected={state?.formData.dueDate}\n                                    onChange={(date: Date) => state?.handleDueDate(date)}\n                                    name=\"dueDate\"\n                                    dateFormat=\"MM/dd/yyyy\"\n                                    wrapperClassName=\"datePicker\"\n                                    calendarClassName=\"calender\"\n                                />\n                                <FiChevronDown />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={styles.mid}>\n                        <div className={styles.formInput}>\n                            <label htmlFor=\"invoice\">Invoice number</label>\n                            <input type=\"email\" name=\"invoice\" id=\"invoice\" className={styles.inputField} onChange={state?.handleFormData} />\n                        </div>\n\n                        <div>\n                            <label>V.A.T %</label>\n                            <div className={styles.dateInput}>\n                                <input type=\"number\" name=\"VAT\" onChange={state?.handleFormData} />\n                                <FiChevronDown />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={styles.formInput}>\n                        <label htmlFor=\"description\">Service description</label>\n                        <input type=\"text\" name=\"description\" id=\"description\" className={styles.inputField} onChange={state?.handleFormData} />\n                    </div>\n                    <div className={styles.mid}>\n                        <div className={styles.formInput}>\n                            <label htmlFor=\"amount\">Service amount</label>\n                            <input type=\"number\" name=\"amount\" id=\"amount\" className={styles.inputField} onChange={state?.handleFormData} value={state?.formData.amount} />\n                        </div>\n                        <div className={styles.formInput}>\n                            <label>Total amount</label>\n                            <div className={styles.total}>NGN {state?.calcTotalAmount().toLocaleString()}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={styles.footer}>\n                <div></div>\n                <div className={styles.footerAction}>\n                    <CustomButton text=\"CANCEL\" clear={true} fill={false} history={history} />\n                    <CustomButton text=\"CREATE INVOICE\" clear={false} fill={true} history={history} match={match} />\n                </div>\n            </div>\n        </PageLayout>\n    )\n}\n\nexport default GenerateInvoice\n","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Context/invoiceContext.tsx",["72"],"import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { Iformdata } from '../interface';\n\ninterface ContextValues {\n    formData: Iformdata,\n    handleFormData: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    handleIssueDate: (date: Date) => void,\n    handleDueDate: (date: Date) => void,\n    isFormFilled: boolean,\n    calcTotalAmount: () => number\n}\n\nexport const InvoiceContext = createContext<ContextValues | null>(null);\n\n\ntype Propstype = {\n    children: React.ReactNode\n}\n\n\nexport const InvoiceContextProvider = ({ children }: Propstype) => {\n    const [formData, setFormData] = useState({\n        company: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n        issueDate: new Date(),\n        dueDate: new Date(),\n        VAT: 0,\n        description: \"\",\n        amount: 0,\n        totalAmount: 0,\n    })\n    const [isFormFilled, setIsFormFilled] = useState(false);\n\n    useEffect(() => {\n        const { company, email, phone, address, VAT, description, amount } = formData;\n        setIsFormFilled(prev => (company && email && phone && address && VAT && description && amount) ? true : false)\n    }, [formData])\n\n\n    const calcTotalAmount = useCallback(\n        () => {\n            return (((formData.VAT * formData.amount) / 100) + Number(formData.amount))\n        },\n        [formData.amount],\n    );\n\n    const handleFormData = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value, name } = e.target;\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleIssueDate = (date: Date) => {\n        setFormData({ ...formData, issueDate: date })\n    }\n    const handleDueDate = (date: Date) => {\n        setFormData({ ...formData, dueDate: date })\n    }\n\n    const contextValue = {\n        formData,\n        handleFormData,\n        handleIssueDate,\n        handleDueDate,\n        isFormFilled,\n        calcTotalAmount\n    }\n\n\n    return (\n        <InvoiceContext.Provider value={contextValue}>\n            { children}\n        </InvoiceContext.Provider >)\n\n}","/Users/macbook/Desktop/Dexkode/ReactProject/fichaya-task/src/Pages/Invoice/index.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},{"ruleId":"75","replacedBy":"84"},{"ruleId":"77","severity":1,"message":"85","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":46,"column":9,"nodeType":"88","endLine":46,"endColumn":26,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"@typescript-eslint/no-unused-vars","'ReactNode' is defined but never used.","Identifier","unusedVar",["90"],["91"],["90"],["91"],"'Prompt' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'formData.VAT'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [formData.VAT, formData.amount]",{"range":"95","text":"96"},[1346,1363],"[formData.VAT, formData.amount]"]